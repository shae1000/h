<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>2D Shooter Game</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            font-family: Arial, sans-serif;
        }
        canvas {
            display: block;
            background: #000;
        }
        .score {
            position: absolute;
            top: 10px;
            left: 10px;
            color: white;
            font-size: 20px;
        }
    </style>
</head>
<body>
    <div class="score">Score: <span id="score">0</span></div>
    <canvas id="gameCanvas"></canvas>

    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        let score = 0;
        let player = {
            x: canvas.width / 2,
            y: canvas.height - 30,
            width: 20,
            height: 20,
            color: 'white',
            speed: 5,
            dx: 0
        };

        let bullets = [];
        let enemies = [];

        function drawPlayer() {
            ctx.fillStyle = player.color;
            ctx.fillRect(player.x, player.y, player.width, player.height);
        }

        function drawBullets() {
            bullets.forEach((bullet, index) => {
                ctx.fillStyle = 'red';
                ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);
                bullet.y -= bullet.speed;
                if (bullet.y + bullet.height < 0) {
                    bullets.splice(index, 1);
                }
            });
        }

        function drawEnemies() {
            enemies.forEach((enemy, index) => {
                ctx.fillStyle = 'green';
                ctx.fillRect(enemy.x, enemy.y, enemy.width, enemy.height);
                enemy.y += enemy.speed;
                if (enemy.y > canvas.height) {
                    enemies.splice(index, 1);
                    score -= 1;
                    document.getElementById('score').textContent = score;
                }
            });
        }

        function createEnemy() {
            const x = Math.random() * (canvas.width - 20);
            const y = -20;
            const width = 20;
            const height = 20;
            const speed = 2;
            enemies.push({ x, y, width, height, speed });
        }

        function checkCollision() {
            bullets.forEach((bullet, bIndex) => {
                enemies.forEach((enemy, eIndex) => {
                    if (bullet.x < enemy.x + enemy.width &&
                        bullet.x + bullet.width > enemy.x &&
                        bullet.y < enemy.y + enemy.height &&
                        bullet.y + bullet.height > enemy.y) {
                        setTimeout(() => {
                            bullets.splice(bIndex, 1);
                            enemies.splice(eIndex, 1);
                            score += 1;
                            document.getElementById('score').textContent = score;
                        }, 0);
                    }
                });
            });
        }

        function update() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawPlayer();
            drawBullets();
            drawEnemies();
            checkCollision();

            player.x += player.dx;

            if (player.x < 0) player.x = 0;
            if (player.x + player.width > canvas.width) player.x = canvas.width - player.width;

            requestAnimationFrame(update);
        }

        function moveRight() {
            player.dx = player.speed;
        }

        function moveLeft() {
            player.dx = -player.speed;
        }

        function shoot() {
            bullets.push({
                x: player.x + player.width / 2 - 2,
                y: player.y,
                width: 4,
                height: 10,
                speed: 7
            });
        }

        function keyDown(e) {
            if (e.key === 'ArrowRight' || e.key === 'd') moveRight();
            if (e.key === 'ArrowLeft' || e.key === 'a') moveLeft();
            if (e.key === ' ') shoot();
        }

        function keyUp(e) {
            if (e.key === 'ArrowRight' || e.key === 'd' || e.key === 'ArrowLeft' || e.key === 'a') player.dx = 0;
        }

        document.addEventListener('keydown', keyDown);
        document.addEventListener('keyup', keyUp);

        setInterval(createEnemy, 1000);

        update();
    </script>
</body>
</html>
